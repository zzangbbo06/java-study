package sec02.exam04;

public class Driver {
	// 부모타입의 매개변수이면 Vehicle 자신의 객체 뿐만 아니라 자식 객체도 들어올 수 있다.
	// 운전자는 버스, 택시 모두 운전 가능
	public void drive(Vehicle vehicle) { // 특정 타입이 아닌 부모 타입으로 받음
		vehicle.run();
	}
	
	// 다형성을 안쓰면 ?
	// if-else문으로 다양한 조건을 추가하거나
	// drive() 메소드를 여러 개 만들어야 됨
	// 차량이 늘어날수록 메소드 오버로딩이 계속 늘어남
	// 비슷한 기능이 반복됨 -> 코드 중복
	// 유지보수 어려움, 유연성이 떨어짐
	
	public void drive(Bus bus) {
		bus.run();
	}
	public void drive(Taxi taxi) {
		taxi.run();
	}
	// 정리
		// 다형성: 여러 가지 형태를 가질 수 있는 성질을 말하는데
		// 자바에서는 부모 타입 참조 변수로 자식 타입 객체를 다루는 것을 말함
		// 이로 인해 하나의 이름으로 여러 동작을 할 수 있게 하는 것(실행결과가 다양하게 나올 수 있다.)
		
		// 다형성의 장점(주로 1, 2에 많이 사용)
		// 1. 매개변수의 다형성
		// 예: 장바구니에 물건을 담는 기능, 물건을 구매하는 기능 등
		// void addCart(Product prod) {}
		// 2. 하나의 배열 또는 컬렉션으로 여러 종류의 객체 다루기 가능
		// 예: Vehicle[] vehicles = new Vehicle[5];
		// 3. 필드의 다형성
		// 예: 특정 이벤트(세일) 기간에만 적용할 객체, 다양한 결제 수단으로 결제를 수행할 때, 다양한 DB 다룰 때 등
		
		// => 다형성을 잘 활용하면 유연하고 확장성있고, 유지보수가 편리한 프로그램을 만들수 있음
	}
	
	



